// Code generated by protoc-gen-bff. DO NOT EDIT.
// Version: 1.0.0

package web

import (
	"context"

	"github.com/gin-gonic/gin"
)

// IContactApplyHandler BFF 接口
type IContactApplyHandler interface {
	Create(ctx context.Context, req *ContactApplyCreateRequest) (*ContactApplyCreateResponse, error)
	Accept(ctx context.Context, req *ContactApplyAcceptRequest) (*ContactApplyAcceptResponse, error)
	Decline(ctx context.Context, req *ContactApplyDeclineRequest) (*ContactApplyDeclineResponse, error)
	List(ctx context.Context, req *ContactApplyListRequest) (*ContactApplyListResponse, error)
	UnreadNum(ctx context.Context, req *ContactApplyUnreadNumRequest) (*ContactApplyUnreadNumResponse, error)
}

// RegisterContactApplyHandler 注册服务路由处理器
func RegisterContactApplyHandler(r gin.IRoutes, s interface {
	ShouldProto(c *gin.Context, in any) error
	ErrorResponse(c *gin.Context, err error)
	SuccessResponse(c *gin.Context, data any)
}, handler IContactApplyHandler) {
	if handler == nil {
		panic("handler is nil")
	}

	r.POST("/api/v1/contact-apply/create", func(c *gin.Context) {
		var in ContactApplyCreateRequest
		if err := s.ShouldProto(c, &in); err != nil {
			s.ErrorResponse(c, err)
			return
		}

		data, err := handler.Create(c.Request.Context(), &in)
		if err != nil {
			s.ErrorResponse(c, err)
			return
		}

		s.SuccessResponse(c, data)
	})

	r.POST("/api/v1/contact-apply/accept", func(c *gin.Context) {
		var in ContactApplyAcceptRequest
		if err := s.ShouldProto(c, &in); err != nil {
			s.ErrorResponse(c, err)
			return
		}

		data, err := handler.Accept(c.Request.Context(), &in)
		if err != nil {
			s.ErrorResponse(c, err)
			return
		}

		s.SuccessResponse(c, data)
	})

	r.POST("/api/v1/contact-apply/decline", func(c *gin.Context) {
		var in ContactApplyDeclineRequest
		if err := s.ShouldProto(c, &in); err != nil {
			s.ErrorResponse(c, err)
			return
		}

		data, err := handler.Decline(c.Request.Context(), &in)
		if err != nil {
			s.ErrorResponse(c, err)
			return
		}

		s.SuccessResponse(c, data)
	})

	r.POST("/api/v1/contact-apply/list", func(c *gin.Context) {
		var in ContactApplyListRequest
		if err := s.ShouldProto(c, &in); err != nil {
			s.ErrorResponse(c, err)
			return
		}

		data, err := handler.List(c.Request.Context(), &in)
		if err != nil {
			s.ErrorResponse(c, err)
			return
		}

		s.SuccessResponse(c, data)
	})

	r.POST("/api/v1/contact-apply/unread-num", func(c *gin.Context) {
		var in ContactApplyUnreadNumRequest
		if err := s.ShouldProto(c, &in); err != nil {
			s.ErrorResponse(c, err)
			return
		}

		data, err := handler.UnreadNum(c.Request.Context(), &in)
		if err != nil {
			s.ErrorResponse(c, err)
			return
		}

		s.SuccessResponse(c, data)
	})

}
