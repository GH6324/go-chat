// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: web/v1/emoticon.proto

package web

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmoticonItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmoticonId    int32                  `protobuf:"varint,1,opt,name=emoticon_id,json=emoticonId,proto3" json:"emoticon_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonItem) Reset() {
	*x = EmoticonItem{}
	mi := &file_web_v1_emoticon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonItem) ProtoMessage() {}

func (x *EmoticonItem) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonItem.ProtoReflect.Descriptor instead.
func (*EmoticonItem) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{0}
}

func (x *EmoticonItem) GetEmoticonId() int32 {
	if x != nil {
		return x.EmoticonId
	}
	return 0
}

func (x *EmoticonItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 删除表情包接口请求参数
type EmoticonDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmoticonId    int32                  `protobuf:"varint,1,opt,name=emoticon_id,json=emoticonId,proto3" json:"emoticon_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonDeleteRequest) Reset() {
	*x = EmoticonDeleteRequest{}
	mi := &file_web_v1_emoticon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonDeleteRequest) ProtoMessage() {}

func (x *EmoticonDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonDeleteRequest.ProtoReflect.Descriptor instead.
func (*EmoticonDeleteRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{1}
}

func (x *EmoticonDeleteRequest) GetEmoticonId() int32 {
	if x != nil {
		return x.EmoticonId
	}
	return 0
}

// 删除表情包接口响应参数
type EmoticonDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonDeleteResponse) Reset() {
	*x = EmoticonDeleteResponse{}
	mi := &file_web_v1_emoticon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonDeleteResponse) ProtoMessage() {}

func (x *EmoticonDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonDeleteResponse.ProtoReflect.Descriptor instead.
func (*EmoticonDeleteResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{2}
}

// 用户表情包列表接口请求参数
type EmoticonListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonListRequest) Reset() {
	*x = EmoticonListRequest{}
	mi := &file_web_v1_emoticon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonListRequest) ProtoMessage() {}

func (x *EmoticonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonListRequest.ProtoReflect.Descriptor instead.
func (*EmoticonListRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{3}
}

// 用户表情包列表接口响应参数
type EmoticonListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*EmoticonItem        `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonListResponse) Reset() {
	*x = EmoticonListResponse{}
	mi := &file_web_v1_emoticon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonListResponse) ProtoMessage() {}

func (x *EmoticonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonListResponse.ProtoReflect.Descriptor instead.
func (*EmoticonListResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{4}
}

func (x *EmoticonListResponse) GetItems() []*EmoticonItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 表情包上传接口请求参数
type EmoticonUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonUploadRequest) Reset() {
	*x = EmoticonUploadRequest{}
	mi := &file_web_v1_emoticon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonUploadRequest) ProtoMessage() {}

func (x *EmoticonUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonUploadRequest.ProtoReflect.Descriptor instead.
func (*EmoticonUploadRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{5}
}

// 表情包上传接口响应参数
type EmoticonUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmoticonId    int32                  `protobuf:"varint,1,opt,name=emoticon_id,json=emoticonId,proto3" json:"emoticon_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonUploadResponse) Reset() {
	*x = EmoticonUploadResponse{}
	mi := &file_web_v1_emoticon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonUploadResponse) ProtoMessage() {}

func (x *EmoticonUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonUploadResponse.ProtoReflect.Descriptor instead.
func (*EmoticonUploadResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{6}
}

func (x *EmoticonUploadResponse) GetEmoticonId() int32 {
	if x != nil {
		return x.EmoticonId
	}
	return 0
}

func (x *EmoticonUploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 创建表情包接口请求参数
type EmoticonCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonCreateRequest) Reset() {
	*x = EmoticonCreateRequest{}
	mi := &file_web_v1_emoticon_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonCreateRequest) ProtoMessage() {}

func (x *EmoticonCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonCreateRequest.ProtoReflect.Descriptor instead.
func (*EmoticonCreateRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{7}
}

func (x *EmoticonCreateRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 创建表情包接口响应参数
type EmoticonCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmoticonId    int32                  `protobuf:"varint,1,opt,name=emoticon_id,json=emoticonId,proto3" json:"emoticon_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmoticonCreateResponse) Reset() {
	*x = EmoticonCreateResponse{}
	mi := &file_web_v1_emoticon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmoticonCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoticonCreateResponse) ProtoMessage() {}

func (x *EmoticonCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_emoticon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoticonCreateResponse.ProtoReflect.Descriptor instead.
func (*EmoticonCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_emoticon_proto_rawDescGZIP(), []int{8}
}

func (x *EmoticonCreateResponse) GetEmoticonId() int32 {
	if x != nil {
		return x.EmoticonId
	}
	return 0
}

func (x *EmoticonCreateResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_web_v1_emoticon_proto protoreflect.FileDescriptor

const file_web_v1_emoticon_proto_rawDesc = "" +
	"\n" +
	"\x15web/v1/emoticon.proto\x12\x03web\x1a\x17validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\"A\n" +
	"\fEmoticonItem\x12\x1f\n" +
	"\vemoticon_id\x18\x01 \x01(\x05R\n" +
	"emoticonId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"A\n" +
	"\x15EmoticonDeleteRequest\x12(\n" +
	"\vemoticon_id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\n" +
	"emoticonId\"\x18\n" +
	"\x16EmoticonDeleteResponse\"\x15\n" +
	"\x13EmoticonListRequest\"?\n" +
	"\x14EmoticonListResponse\x12'\n" +
	"\x05items\x18\x02 \x03(\v2\x11.web.EmoticonItemR\x05items\"\x17\n" +
	"\x15EmoticonUploadRequest\"K\n" +
	"\x16EmoticonUploadResponse\x12\x1f\n" +
	"\vemoticon_id\x18\x01 \x01(\x05R\n" +
	"emoticonId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"2\n" +
	"\x15EmoticonCreateRequest\x12\x19\n" +
	"\x03url\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03url\"K\n" +
	"\x16EmoticonCreateResponse\x12\x1f\n" +
	"\vemoticon_id\x18\x01 \x01(\x05R\n" +
	"emoticonId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url2\xd5\x02\n" +
	"\bEmoticon\x12o\n" +
	"\x06Delete\x12\x1a.web.EmoticonDeleteRequest\x1a\x1b.web.EmoticonDeleteResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/api/v1/emoticon/customize/delete\x12g\n" +
	"\x04List\x12\x18.web.EmoticonListRequest\x1a\x19.web.EmoticonListResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/api/v1/emoticon/customize/list\x12o\n" +
	"\x06Create\x12\x1a.web.EmoticonCreateRequest\x1a\x1b.web.EmoticonCreateResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/api/v1/emoticon/customize/createB\fZ\n" +
	"web/v1;webb\x06proto3"

var (
	file_web_v1_emoticon_proto_rawDescOnce sync.Once
	file_web_v1_emoticon_proto_rawDescData []byte
)

func file_web_v1_emoticon_proto_rawDescGZIP() []byte {
	file_web_v1_emoticon_proto_rawDescOnce.Do(func() {
		file_web_v1_emoticon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_web_v1_emoticon_proto_rawDesc), len(file_web_v1_emoticon_proto_rawDesc)))
	})
	return file_web_v1_emoticon_proto_rawDescData
}

var file_web_v1_emoticon_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_web_v1_emoticon_proto_goTypes = []any{
	(*EmoticonItem)(nil),           // 0: web.EmoticonItem
	(*EmoticonDeleteRequest)(nil),  // 1: web.EmoticonDeleteRequest
	(*EmoticonDeleteResponse)(nil), // 2: web.EmoticonDeleteResponse
	(*EmoticonListRequest)(nil),    // 3: web.EmoticonListRequest
	(*EmoticonListResponse)(nil),   // 4: web.EmoticonListResponse
	(*EmoticonUploadRequest)(nil),  // 5: web.EmoticonUploadRequest
	(*EmoticonUploadResponse)(nil), // 6: web.EmoticonUploadResponse
	(*EmoticonCreateRequest)(nil),  // 7: web.EmoticonCreateRequest
	(*EmoticonCreateResponse)(nil), // 8: web.EmoticonCreateResponse
}
var file_web_v1_emoticon_proto_depIdxs = []int32{
	0, // 0: web.EmoticonListResponse.items:type_name -> web.EmoticonItem
	1, // 1: web.Emoticon.Delete:input_type -> web.EmoticonDeleteRequest
	3, // 2: web.Emoticon.List:input_type -> web.EmoticonListRequest
	7, // 3: web.Emoticon.Create:input_type -> web.EmoticonCreateRequest
	2, // 4: web.Emoticon.Delete:output_type -> web.EmoticonDeleteResponse
	4, // 5: web.Emoticon.List:output_type -> web.EmoticonListResponse
	8, // 6: web.Emoticon.Create:output_type -> web.EmoticonCreateResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_web_v1_emoticon_proto_init() }
func file_web_v1_emoticon_proto_init() {
	if File_web_v1_emoticon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_web_v1_emoticon_proto_rawDesc), len(file_web_v1_emoticon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web_v1_emoticon_proto_goTypes,
		DependencyIndexes: file_web_v1_emoticon_proto_depIdxs,
		MessageInfos:      file_web_v1_emoticon_proto_msgTypes,
	}.Build()
	File_web_v1_emoticon_proto = out.File
	file_web_v1_emoticon_proto_goTypes = nil
	file_web_v1_emoticon_proto_depIdxs = nil
}
