// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: web/v1/group_vote.proto

package web

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupVoteCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int32    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty" binding:"required"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty" binding:"required"`                                  // 标题
	Mode        int32    `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty" binding:"oneof=1 2"`                                  // 投票模式
	IsAnonymous int32    `protobuf:"varint,5,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty" binding:"oneof=1 2"` // 匿名投票
	Options     []string `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" binding:"required"`                              // 投票选项
}

func (x *GroupVoteCreateRequest) Reset() {
	*x = GroupVoteCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteCreateRequest) ProtoMessage() {}

func (x *GroupVoteCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteCreateRequest.ProtoReflect.Descriptor instead.
func (*GroupVoteCreateRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{0}
}

func (x *GroupVoteCreateRequest) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupVoteCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GroupVoteCreateRequest) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *GroupVoteCreateRequest) GetIsAnonymous() int32 {
	if x != nil {
		return x.IsAnonymous
	}
	return 0
}

func (x *GroupVoteCreateRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

type GroupVoteCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupVoteCreateResponse) Reset() {
	*x = GroupVoteCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteCreateResponse) ProtoMessage() {}

func (x *GroupVoteCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteCreateResponse.ProtoReflect.Descriptor instead.
func (*GroupVoteCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{1}
}

type GroupVoteSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId  int32    `protobuf:"varint,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty" binding:"required"`
	Options []string `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" binding:"required"` // 投票选项
}

func (x *GroupVoteSubmitRequest) Reset() {
	*x = GroupVoteSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteSubmitRequest) ProtoMessage() {}

func (x *GroupVoteSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteSubmitRequest.ProtoReflect.Descriptor instead.
func (*GroupVoteSubmitRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{2}
}

func (x *GroupVoteSubmitRequest) GetVoteId() int32 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

func (x *GroupVoteSubmitRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

type GroupVoteSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupVoteSubmitResponse) Reset() {
	*x = GroupVoteSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteSubmitResponse) ProtoMessage() {}

func (x *GroupVoteSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteSubmitResponse.ProtoReflect.Descriptor instead.
func (*GroupVoteSubmitResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{3}
}

type GroupVoteDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId int32 `protobuf:"varint,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty" binding:"required"`
}

func (x *GroupVoteDetailRequest) Reset() {
	*x = GroupVoteDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteDetailRequest) ProtoMessage() {}

func (x *GroupVoteDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteDetailRequest.ProtoReflect.Descriptor instead.
func (*GroupVoteDetailRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{4}
}

func (x *GroupVoteDetailRequest) GetVoteId() int32 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

type GroupVoteDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId        int32                                   `protobuf:"varint,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"` // 投票ID
	Title         string                                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                  // 标题
	AnswerMode    int32                                   `protobuf:"varint,3,opt,name=answer_mode,json=answerMode,proto3" json:"answer_mode,omitempty"`
	AnswerOptions []*GroupVoteDetailResponse_AnswerOption `protobuf:"bytes,4,rep,name=answer_options,json=answerOptions,proto3" json:"answer_options,omitempty"`
	AnswerNum     int32                                   `protobuf:"varint,5,opt,name=answer_num,json=answerNum,proto3" json:"answer_num,omitempty"`
	AnsweredNum   int32                                   `protobuf:"varint,6,opt,name=answered_num,json=answeredNum,proto3" json:"answered_num,omitempty"`
	IsAnonymous   int32                                   `protobuf:"varint,7,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty"`
	AnsweredUsers []*GroupVoteDetailResponse_AnsweredUser `protobuf:"bytes,8,rep,name=answered_users,json=answeredUsers,proto3" json:"answered_users,omitempty"`
	IsSubmit      bool                                    `protobuf:"varint,9,opt,name=is_submit,json=isSubmit,proto3" json:"is_submit,omitempty"`
}

func (x *GroupVoteDetailResponse) Reset() {
	*x = GroupVoteDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteDetailResponse) ProtoMessage() {}

func (x *GroupVoteDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteDetailResponse.ProtoReflect.Descriptor instead.
func (*GroupVoteDetailResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{5}
}

func (x *GroupVoteDetailResponse) GetVoteId() int32 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

func (x *GroupVoteDetailResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GroupVoteDetailResponse) GetAnswerMode() int32 {
	if x != nil {
		return x.AnswerMode
	}
	return 0
}

func (x *GroupVoteDetailResponse) GetAnswerOptions() []*GroupVoteDetailResponse_AnswerOption {
	if x != nil {
		return x.AnswerOptions
	}
	return nil
}

func (x *GroupVoteDetailResponse) GetAnswerNum() int32 {
	if x != nil {
		return x.AnswerNum
	}
	return 0
}

func (x *GroupVoteDetailResponse) GetAnsweredNum() int32 {
	if x != nil {
		return x.AnsweredNum
	}
	return 0
}

func (x *GroupVoteDetailResponse) GetIsAnonymous() int32 {
	if x != nil {
		return x.IsAnonymous
	}
	return 0
}

func (x *GroupVoteDetailResponse) GetAnsweredUsers() []*GroupVoteDetailResponse_AnsweredUser {
	if x != nil {
		return x.AnsweredUsers
	}
	return nil
}

func (x *GroupVoteDetailResponse) GetIsSubmit() bool {
	if x != nil {
		return x.IsSubmit
	}
	return false
}

type GroupVoteDetailResponse_AnswerOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GroupVoteDetailResponse_AnswerOption) Reset() {
	*x = GroupVoteDetailResponse_AnswerOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteDetailResponse_AnswerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteDetailResponse_AnswerOption) ProtoMessage() {}

func (x *GroupVoteDetailResponse_AnswerOption) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteDetailResponse_AnswerOption.ProtoReflect.Descriptor instead.
func (*GroupVoteDetailResponse_AnswerOption) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GroupVoteDetailResponse_AnswerOption) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GroupVoteDetailResponse_AnswerOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GroupVoteDetailResponse_AnsweredUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname   string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Options    []string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`                         // 答题选项
	AnswerTime string   `protobuf:"bytes,4,opt,name=answer_time,json=answerTime,proto3" json:"answer_time,omitempty"` // 答题时间
}

func (x *GroupVoteDetailResponse_AnsweredUser) Reset() {
	*x = GroupVoteDetailResponse_AnsweredUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_v1_group_vote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVoteDetailResponse_AnsweredUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVoteDetailResponse_AnsweredUser) ProtoMessage() {}

func (x *GroupVoteDetailResponse_AnsweredUser) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_group_vote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVoteDetailResponse_AnsweredUser.ProtoReflect.Descriptor instead.
func (*GroupVoteDetailResponse_AnsweredUser) Descriptor() ([]byte, []int) {
	return file_web_v1_group_vote_proto_rawDescGZIP(), []int{5, 1}
}

func (x *GroupVoteDetailResponse_AnsweredUser) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupVoteDetailResponse_AnsweredUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupVoteDetailResponse_AnsweredUser) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GroupVoteDetailResponse_AnsweredUser) GetAnswerTime() string {
	if x != nil {
		return x.AnswerTime
	}
	return ""
}

var File_web_v1_group_vote_proto protoreflect.FileDescriptor

var file_web_v1_group_vote_proto_rawDesc = []byte{
	0x0a, 0x17, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x77, 0x65, 0x62, 0x1a, 0x13,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x99, 0x02, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a,
	0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x3d, 0x31, 0x20, 0x32, 0x22, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x3a, 0x22, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x3d, 0x31, 0x20, 0x32, 0x22, 0x52,
	0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0x9a,
	0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x19, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x16, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06,
	0x76, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x74,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x22, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x49, 0x64,
	0x22, 0xc7, 0x04, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76,
	0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x50, 0x0a, 0x0e,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x75, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x1a, 0x36, 0x0a, 0x0c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x7e, 0x0a, 0x0c, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x77, 0x65,
	0x62, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x65, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_web_v1_group_vote_proto_rawDescOnce sync.Once
	file_web_v1_group_vote_proto_rawDescData = file_web_v1_group_vote_proto_rawDesc
)

func file_web_v1_group_vote_proto_rawDescGZIP() []byte {
	file_web_v1_group_vote_proto_rawDescOnce.Do(func() {
		file_web_v1_group_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_web_v1_group_vote_proto_rawDescData)
	})
	return file_web_v1_group_vote_proto_rawDescData
}

var file_web_v1_group_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_web_v1_group_vote_proto_goTypes = []any{
	(*GroupVoteCreateRequest)(nil),               // 0: web.GroupVoteCreateRequest
	(*GroupVoteCreateResponse)(nil),              // 1: web.GroupVoteCreateResponse
	(*GroupVoteSubmitRequest)(nil),               // 2: web.GroupVoteSubmitRequest
	(*GroupVoteSubmitResponse)(nil),              // 3: web.GroupVoteSubmitResponse
	(*GroupVoteDetailRequest)(nil),               // 4: web.GroupVoteDetailRequest
	(*GroupVoteDetailResponse)(nil),              // 5: web.GroupVoteDetailResponse
	(*GroupVoteDetailResponse_AnswerOption)(nil), // 6: web.GroupVoteDetailResponse.AnswerOption
	(*GroupVoteDetailResponse_AnsweredUser)(nil), // 7: web.GroupVoteDetailResponse.AnsweredUser
}
var file_web_v1_group_vote_proto_depIdxs = []int32{
	6, // 0: web.GroupVoteDetailResponse.answer_options:type_name -> web.GroupVoteDetailResponse.AnswerOption
	7, // 1: web.GroupVoteDetailResponse.answered_users:type_name -> web.GroupVoteDetailResponse.AnsweredUser
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_web_v1_group_vote_proto_init() }
func file_web_v1_group_vote_proto_init() {
	if File_web_v1_group_vote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_web_v1_group_vote_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteDetailResponse_AnswerOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_v1_group_vote_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GroupVoteDetailResponse_AnsweredUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web_v1_group_vote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_web_v1_group_vote_proto_goTypes,
		DependencyIndexes: file_web_v1_group_vote_proto_depIdxs,
		MessageInfos:      file_web_v1_group_vote_proto_msgTypes,
	}.Build()
	File_web_v1_group_vote_proto = out.File
	file_web_v1_group_vote_proto_rawDesc = nil
	file_web_v1_group_vote_proto_goTypes = nil
	file_web_v1_group_vote_proto_depIdxs = nil
}
