// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: web/v1/talk.proto

package web

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 会话列表项
type TalkSessionItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TalkMode      int32                  `protobuf:"varint,2,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	ToFromId      int32                  `protobuf:"varint,3,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	IsTop         int32                  `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	IsDisturb     int32                  `protobuf:"varint,5,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty"`
	IsRobot       int32                  `protobuf:"varint,7,opt,name=is_robot,json=isRobot,proto3" json:"is_robot,omitempty"`
	Name          string                 `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Remark        string                 `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	UnreadNum     int32                  `protobuf:"varint,11,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`
	MsgText       string                 `protobuf:"bytes,12,opt,name=msg_text,json=msgText,proto3" json:"msg_text,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionItem) Reset() {
	*x = TalkSessionItem{}
	mi := &file_web_v1_talk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionItem) ProtoMessage() {}

func (x *TalkSessionItem) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionItem.ProtoReflect.Descriptor instead.
func (*TalkSessionItem) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{0}
}

func (x *TalkSessionItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TalkSessionItem) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionItem) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

func (x *TalkSessionItem) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *TalkSessionItem) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

func (x *TalkSessionItem) GetIsRobot() int32 {
	if x != nil {
		return x.IsRobot
	}
	return 0
}

func (x *TalkSessionItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TalkSessionItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TalkSessionItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TalkSessionItem) GetUnreadNum() int32 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *TalkSessionItem) GetMsgText() string {
	if x != nil {
		return x.MsgText
	}
	return ""
}

func (x *TalkSessionItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 会话创建接口请求参数
type TalkSessionCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 1:私聊 2:群聊
	TalkMode int32 `protobuf:"varint,1,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	// 对方ID
	ToFromId      int32 `protobuf:"varint,2,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionCreateRequest) Reset() {
	*x = TalkSessionCreateRequest{}
	mi := &file_web_v1_talk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionCreateRequest) ProtoMessage() {}

func (x *TalkSessionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionCreateRequest.ProtoReflect.Descriptor instead.
func (*TalkSessionCreateRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{1}
}

func (x *TalkSessionCreateRequest) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionCreateRequest) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

// 会话创建接口响应参数
type TalkSessionCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TalkMode      int32                  `protobuf:"varint,2,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	ToFromId      int32                  `protobuf:"varint,3,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	IsTop         int32                  `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	IsDisturb     int32                  `protobuf:"varint,5,opt,name=is_disturb,json=isDisturb,proto3" json:"is_disturb,omitempty"`
	IsOnline      int32                  `protobuf:"varint,6,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	IsRobot       int32                  `protobuf:"varint,7,opt,name=is_robot,json=isRobot,proto3" json:"is_robot,omitempty"`
	Name          string                 `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Remark        string                 `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	UnreadNum     int32                  `protobuf:"varint,11,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`
	MsgText       string                 `protobuf:"bytes,12,opt,name=msg_text,json=msgText,proto3" json:"msg_text,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionCreateResponse) Reset() {
	*x = TalkSessionCreateResponse{}
	mi := &file_web_v1_talk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionCreateResponse) ProtoMessage() {}

func (x *TalkSessionCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionCreateResponse.ProtoReflect.Descriptor instead.
func (*TalkSessionCreateResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{2}
}

func (x *TalkSessionCreateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetIsDisturb() int32 {
	if x != nil {
		return x.IsDisturb
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetIsOnline() int32 {
	if x != nil {
		return x.IsOnline
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetIsRobot() int32 {
	if x != nil {
		return x.IsRobot
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TalkSessionCreateResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TalkSessionCreateResponse) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TalkSessionCreateResponse) GetUnreadNum() int32 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *TalkSessionCreateResponse) GetMsgText() string {
	if x != nil {
		return x.MsgText
	}
	return ""
}

func (x *TalkSessionCreateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 会话删除接口请求参数
type TalkSessionDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TalkMode      int32                  `protobuf:"varint,1,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	ToFromId      int32                  `protobuf:"varint,2,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionDeleteRequest) Reset() {
	*x = TalkSessionDeleteRequest{}
	mi := &file_web_v1_talk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionDeleteRequest) ProtoMessage() {}

func (x *TalkSessionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionDeleteRequest.ProtoReflect.Descriptor instead.
func (*TalkSessionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{3}
}

func (x *TalkSessionDeleteRequest) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionDeleteRequest) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

// 会话删除接口响应参数
type TalkSessionDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionDeleteResponse) Reset() {
	*x = TalkSessionDeleteResponse{}
	mi := &file_web_v1_talk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionDeleteResponse) ProtoMessage() {}

func (x *TalkSessionDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionDeleteResponse.ProtoReflect.Descriptor instead.
func (*TalkSessionDeleteResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{4}
}

// 会话置顶接口请求参数
type TalkSessionTopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TalkMode      int32                  `protobuf:"varint,1,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	ToFromId      int32                  `protobuf:"varint,2,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	Action        int32                  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionTopRequest) Reset() {
	*x = TalkSessionTopRequest{}
	mi := &file_web_v1_talk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionTopRequest) ProtoMessage() {}

func (x *TalkSessionTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionTopRequest.ProtoReflect.Descriptor instead.
func (*TalkSessionTopRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{5}
}

func (x *TalkSessionTopRequest) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionTopRequest) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

func (x *TalkSessionTopRequest) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// 会话置顶接口响应参数
type TalkSessionTopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionTopResponse) Reset() {
	*x = TalkSessionTopResponse{}
	mi := &file_web_v1_talk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionTopResponse) ProtoMessage() {}

func (x *TalkSessionTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionTopResponse.ProtoReflect.Descriptor instead.
func (*TalkSessionTopResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{6}
}

// 会话免打扰接口请求参数
type TalkSessionDisturbRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TalkMode      int32                  `protobuf:"varint,1,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	ToFromId      int32                  `protobuf:"varint,2,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	Action        int32                  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionDisturbRequest) Reset() {
	*x = TalkSessionDisturbRequest{}
	mi := &file_web_v1_talk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionDisturbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionDisturbRequest) ProtoMessage() {}

func (x *TalkSessionDisturbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionDisturbRequest.ProtoReflect.Descriptor instead.
func (*TalkSessionDisturbRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{7}
}

func (x *TalkSessionDisturbRequest) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionDisturbRequest) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

func (x *TalkSessionDisturbRequest) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// 会话免打扰接口响应参数
type TalkSessionDisturbResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionDisturbResponse) Reset() {
	*x = TalkSessionDisturbResponse{}
	mi := &file_web_v1_talk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionDisturbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionDisturbResponse) ProtoMessage() {}

func (x *TalkSessionDisturbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionDisturbResponse.ProtoReflect.Descriptor instead.
func (*TalkSessionDisturbResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{8}
}

// 会话列表接口请求参数
type TalkSessionListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionListRequest) Reset() {
	*x = TalkSessionListRequest{}
	mi := &file_web_v1_talk_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionListRequest) ProtoMessage() {}

func (x *TalkSessionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionListRequest.ProtoReflect.Descriptor instead.
func (*TalkSessionListRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{9}
}

// 会话列表接口响应参数
type TalkSessionListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*TalkSessionItem     `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionListResponse) Reset() {
	*x = TalkSessionListResponse{}
	mi := &file_web_v1_talk_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionListResponse) ProtoMessage() {}

func (x *TalkSessionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionListResponse.ProtoReflect.Descriptor instead.
func (*TalkSessionListResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{10}
}

func (x *TalkSessionListResponse) GetItems() []*TalkSessionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 会话未读数清除接口请求参数
type TalkSessionClearUnreadNumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TalkMode      int32                  `protobuf:"varint,1,opt,name=talk_mode,json=talkMode,proto3" json:"talk_mode,omitempty"`
	ToFromId      int32                  `protobuf:"varint,2,opt,name=to_from_id,json=toFromId,proto3" json:"to_from_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionClearUnreadNumRequest) Reset() {
	*x = TalkSessionClearUnreadNumRequest{}
	mi := &file_web_v1_talk_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionClearUnreadNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionClearUnreadNumRequest) ProtoMessage() {}

func (x *TalkSessionClearUnreadNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionClearUnreadNumRequest.ProtoReflect.Descriptor instead.
func (*TalkSessionClearUnreadNumRequest) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{11}
}

func (x *TalkSessionClearUnreadNumRequest) GetTalkMode() int32 {
	if x != nil {
		return x.TalkMode
	}
	return 0
}

func (x *TalkSessionClearUnreadNumRequest) GetToFromId() int32 {
	if x != nil {
		return x.ToFromId
	}
	return 0
}

// 会话未读数清除接口响应参数
type TalkSessionClearUnreadNumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TalkSessionClearUnreadNumResponse) Reset() {
	*x = TalkSessionClearUnreadNumResponse{}
	mi := &file_web_v1_talk_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkSessionClearUnreadNumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkSessionClearUnreadNumResponse) ProtoMessage() {}

func (x *TalkSessionClearUnreadNumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_talk_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkSessionClearUnreadNumResponse.ProtoReflect.Descriptor instead.
func (*TalkSessionClearUnreadNumResponse) Descriptor() ([]byte, []int) {
	return file_web_v1_talk_proto_rawDescGZIP(), []int{12}
}

var File_web_v1_talk_proto protoreflect.FileDescriptor

const file_web_v1_talk_proto_rawDesc = "" +
	"\n" +
	"\x11web/v1/talk.proto\x12\x03web\x1a\x17validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\"\x92\x03\n" +
	"\x0fTalkSessionItem\x12\x14\n" +
	"\x02id\x18\x01 \x01(\x05B\x04\xe2A\x01\x02R\x02id\x12!\n" +
	"\ttalk_mode\x18\x02 \x01(\x05B\x04\xe2A\x01\x02R\btalkMode\x12\"\n" +
	"\n" +
	"to_from_id\x18\x03 \x01(\x05B\x04\xe2A\x01\x02R\btoFromId\x12\x1b\n" +
	"\x06is_top\x18\x04 \x01(\x05B\x04\xe2A\x01\x02R\x05isTop\x12#\n" +
	"\n" +
	"is_disturb\x18\x05 \x01(\x05B\x04\xe2A\x01\x02R\tisDisturb\x12\x1f\n" +
	"\bis_robot\x18\a \x01(\x05B\x04\xe2A\x01\x02R\aisRobot\x12\x18\n" +
	"\x04name\x18\b \x01(\tB\x04\xe2A\x01\x02R\x04name\x12\x1c\n" +
	"\x06avatar\x18\t \x01(\tB\x04\xe2A\x01\x02R\x06avatar\x12\x1c\n" +
	"\x06remark\x18\n" +
	" \x01(\tB\x04\xe2A\x01\x02R\x06remark\x12#\n" +
	"\n" +
	"unread_num\x18\v \x01(\x05B\x04\xe2A\x01\x02R\tunreadNum\x12\x1f\n" +
	"\bmsg_text\x18\f \x01(\tB\x04\xe2A\x01\x02R\amsgText\x12#\n" +
	"\n" +
	"updated_at\x18\r \x01(\tB\x04\xe2A\x01\x02R\tupdatedAt\"i\n" +
	"\x18TalkSessionCreateRequest\x12&\n" +
	"\ttalk_mode\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\btalkMode\x12%\n" +
	"\n" +
	"to_from_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\btoFromId\"\xbf\x03\n" +
	"\x19TalkSessionCreateResponse\x12\x14\n" +
	"\x02id\x18\x01 \x01(\x05B\x04\xe2A\x01\x02R\x02id\x12!\n" +
	"\ttalk_mode\x18\x02 \x01(\x05B\x04\xe2A\x01\x02R\btalkMode\x12\"\n" +
	"\n" +
	"to_from_id\x18\x03 \x01(\x05B\x04\xe2A\x01\x02R\btoFromId\x12\x1b\n" +
	"\x06is_top\x18\x04 \x01(\x05B\x04\xe2A\x01\x02R\x05isTop\x12#\n" +
	"\n" +
	"is_disturb\x18\x05 \x01(\x05B\x04\xe2A\x01\x02R\tisDisturb\x12!\n" +
	"\tis_online\x18\x06 \x01(\x05B\x04\xe2A\x01\x02R\bisOnline\x12\x1f\n" +
	"\bis_robot\x18\a \x01(\x05B\x04\xe2A\x01\x02R\aisRobot\x12\x18\n" +
	"\x04name\x18\b \x01(\tB\x04\xe2A\x01\x02R\x04name\x12\x1c\n" +
	"\x06avatar\x18\t \x01(\tB\x04\xe2A\x01\x02R\x06avatar\x12\x1c\n" +
	"\x06remark\x18\n" +
	" \x01(\tB\x04\xe2A\x01\x02R\x06remark\x12#\n" +
	"\n" +
	"unread_num\x18\v \x01(\x05B\x04\xe2A\x01\x02R\tunreadNum\x12\x1f\n" +
	"\bmsg_text\x18\f \x01(\tB\x04\xe2A\x01\x02R\amsgText\x12#\n" +
	"\n" +
	"updated_at\x18\r \x01(\tB\x04\xe2A\x01\x02R\tupdatedAt\"i\n" +
	"\x18TalkSessionDeleteRequest\x12&\n" +
	"\ttalk_mode\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\btalkMode\x12%\n" +
	"\n" +
	"to_from_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\btoFromId\"\x1b\n" +
	"\x19TalkSessionDeleteResponse\"\x89\x01\n" +
	"\x15TalkSessionTopRequest\x12&\n" +
	"\ttalk_mode\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\btalkMode\x12%\n" +
	"\n" +
	"to_from_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\btoFromId\x12!\n" +
	"\x06action\x18\x03 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\x06action\"\x18\n" +
	"\x16TalkSessionTopResponse\"\x8d\x01\n" +
	"\x19TalkSessionDisturbRequest\x12&\n" +
	"\ttalk_mode\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\btalkMode\x12%\n" +
	"\n" +
	"to_from_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\btoFromId\x12!\n" +
	"\x06action\x18\x03 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\x06action\"\x1c\n" +
	"\x1aTalkSessionDisturbResponse\"\x18\n" +
	"\x16TalkSessionListRequest\"E\n" +
	"\x17TalkSessionListResponse\x12*\n" +
	"\x05items\x18\x01 \x03(\v2\x14.web.TalkSessionItemR\x05items\"q\n" +
	" TalkSessionClearUnreadNumRequest\x12&\n" +
	"\ttalk_mode\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x040\x010\x02R\btalkMode\x12%\n" +
	"\n" +
	"to_from_id\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\btoFromId\"#\n" +
	"!TalkSessionClearUnreadNumResponse2\xe9\x05\n" +
	"\x04Talk\x12v\n" +
	"\rSessionCreate\x12\x1d.web.TalkSessionCreateRequest\x1a\x1e.web.TalkSessionCreateResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/api/v1/talk/session-create\x12v\n" +
	"\rSessionDelete\x12\x1d.web.TalkSessionDeleteRequest\x1a\x1e.web.TalkSessionDeleteResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/api/v1/talk/session-delete\x12j\n" +
	"\n" +
	"SessionTop\x12\x1a.web.TalkSessionTopRequest\x1a\x1b.web.TalkSessionTopResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/api/v1/talk/session-top\x12z\n" +
	"\x0eSessionDisturb\x12\x1e.web.TalkSessionDisturbRequest\x1a\x1f.web.TalkSessionDisturbResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/api/v1/talk/session-disturb\x12n\n" +
	"\vSessionList\x12\x1b.web.TalkSessionListRequest\x1a\x1c.web.TalkSessionListResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/api/v1/talk/session-list\x12\x98\x01\n" +
	"\x15SessionClearUnreadNum\x12%.web.TalkSessionClearUnreadNumRequest\x1a&.web.TalkSessionClearUnreadNumResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/api/v1/talk/session-clear-unread-numB\fZ\n" +
	"web/v1;webb\x06proto3"

var (
	file_web_v1_talk_proto_rawDescOnce sync.Once
	file_web_v1_talk_proto_rawDescData []byte
)

func file_web_v1_talk_proto_rawDescGZIP() []byte {
	file_web_v1_talk_proto_rawDescOnce.Do(func() {
		file_web_v1_talk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_web_v1_talk_proto_rawDesc), len(file_web_v1_talk_proto_rawDesc)))
	})
	return file_web_v1_talk_proto_rawDescData
}

var file_web_v1_talk_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_web_v1_talk_proto_goTypes = []any{
	(*TalkSessionItem)(nil),                   // 0: web.TalkSessionItem
	(*TalkSessionCreateRequest)(nil),          // 1: web.TalkSessionCreateRequest
	(*TalkSessionCreateResponse)(nil),         // 2: web.TalkSessionCreateResponse
	(*TalkSessionDeleteRequest)(nil),          // 3: web.TalkSessionDeleteRequest
	(*TalkSessionDeleteResponse)(nil),         // 4: web.TalkSessionDeleteResponse
	(*TalkSessionTopRequest)(nil),             // 5: web.TalkSessionTopRequest
	(*TalkSessionTopResponse)(nil),            // 6: web.TalkSessionTopResponse
	(*TalkSessionDisturbRequest)(nil),         // 7: web.TalkSessionDisturbRequest
	(*TalkSessionDisturbResponse)(nil),        // 8: web.TalkSessionDisturbResponse
	(*TalkSessionListRequest)(nil),            // 9: web.TalkSessionListRequest
	(*TalkSessionListResponse)(nil),           // 10: web.TalkSessionListResponse
	(*TalkSessionClearUnreadNumRequest)(nil),  // 11: web.TalkSessionClearUnreadNumRequest
	(*TalkSessionClearUnreadNumResponse)(nil), // 12: web.TalkSessionClearUnreadNumResponse
}
var file_web_v1_talk_proto_depIdxs = []int32{
	0,  // 0: web.TalkSessionListResponse.items:type_name -> web.TalkSessionItem
	1,  // 1: web.Talk.SessionCreate:input_type -> web.TalkSessionCreateRequest
	3,  // 2: web.Talk.SessionDelete:input_type -> web.TalkSessionDeleteRequest
	5,  // 3: web.Talk.SessionTop:input_type -> web.TalkSessionTopRequest
	7,  // 4: web.Talk.SessionDisturb:input_type -> web.TalkSessionDisturbRequest
	9,  // 5: web.Talk.SessionList:input_type -> web.TalkSessionListRequest
	11, // 6: web.Talk.SessionClearUnreadNum:input_type -> web.TalkSessionClearUnreadNumRequest
	2,  // 7: web.Talk.SessionCreate:output_type -> web.TalkSessionCreateResponse
	4,  // 8: web.Talk.SessionDelete:output_type -> web.TalkSessionDeleteResponse
	6,  // 9: web.Talk.SessionTop:output_type -> web.TalkSessionTopResponse
	8,  // 10: web.Talk.SessionDisturb:output_type -> web.TalkSessionDisturbResponse
	10, // 11: web.Talk.SessionList:output_type -> web.TalkSessionListResponse
	12, // 12: web.Talk.SessionClearUnreadNum:output_type -> web.TalkSessionClearUnreadNumResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_web_v1_talk_proto_init() }
func file_web_v1_talk_proto_init() {
	if File_web_v1_talk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_web_v1_talk_proto_rawDesc), len(file_web_v1_talk_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web_v1_talk_proto_goTypes,
		DependencyIndexes: file_web_v1_talk_proto_depIdxs,
		MessageInfos:      file_web_v1_talk_proto_msgTypes,
	}.Build()
	File_web_v1_talk_proto = out.File
	file_web_v1_talk_proto_goTypes = nil
	file_web_v1_talk_proto_depIdxs = nil
}
